type: spec.insomnia.rest/5.0
name: OpenAPI definition v0
meta:
  id: wrk_6f234fc70bbd4a33a11cc1e577e8a87d
  created: 1760898025916
  modified: 1760898025916
  description: ""
collection:
  - url: "{{ _.base_url }}/autores/:id"
    name: /autores/{id}
    meta:
      id: req_d39a512c484d4871a83ae0589ead519f
      created: 1760907660009
      modified: 1760926080848
      isPrivate: false
      description: ""
      sortKey: -1760907700090.25
    method: DELETE
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
    pathParameters:
      - name: id
        value: "2"
  - url: "{{ _.base_url }}/usuarios/:id"
    name: /usuarios/{id}
    meta:
      id: req_d14b5358600f43a29d338220358c2b63
      created: 1760907740130
      modified: 1760925955628
      isPrivate: false
      description: ""
      sortKey: -1760907740150.5
    method: GET
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
    pathParameters:
      - name: id
        value: "1"
  - url: "{{ _.base_url }}/usuarios/:id"
    name: /usuarios/{id}
    meta:
      id: req_afec67fc749949b69883048d931289ad
      created: 1760907740132
      modified: 1760926050138
      isPrivate: false
      description: ""
      sortKey: -1760907740136.625
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
          "idUs": 1,
          "emailUs": "string",
          "senhaUs": "string",
          "nomeUs": "string",
          "ativoUs": true,
          "tipoUs": "string",
          "permissao": "string",
          "enabled": true,
          "password": "string",
          "authorities": [
            {
              "authority": "string"
            }
          ],
          "username": "string",
          "accountNonLocked": true,
          "accountNonExpired": true,
          "credentialsNonExpired": true
        }
    headers:
      - name: Content-Type
        disabled: false
        value: application/json
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
    pathParameters:
      - name: id
        value: "1"
  - url: "{{ _.base_url }}/usuarios/:id"
    name: /usuarios/{id}
    meta:
      id: req_b5c550b58dc743f3af24179a78f0a4c1
      created: 1760907740133
      modified: 1760926072162
      isPrivate: false
      description: ""
      sortKey: -1760907740135.5
    method: DELETE
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
    pathParameters:
      - name: id
        value: "3"
  - url: "{{ _.base_url }}/livros/:id"
    name: /livros/{id}
    meta:
      id: req_ef355d3cb6324ab0bcbbc93083cc5ab3
      created: 1760907740134
      modified: 1760925937161
      isPrivate: false
      description: ""
      sortKey: -1760907740151.5
    method: GET
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
    pathParameters:
      - name: id
        value: "1"
  - url: "{{ _.base_url }}/livros/:id"
    name: /livros/{id}
    meta:
      id: req_37128ed09ed849aa976a4cf97cc264c7
      created: 1760907740135
      modified: 1760926042113
      isPrivate: false
      description: ""
      sortKey: -1760907740136.75
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
          "idLiv": 0,
          "tituloLiv": "string",
          "isbnLiv": "string",
          "anoPublicacaoLiv": 0,
          "autoresIds": [
            0
          ]
        }
    headers:
      - name: Content-Type
        disabled: false
        value: application/json
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
    pathParameters:
      - name: id
        value: "1"
  - url: "{{ _.base_url }}/livros/:id"
    name: /livros/{id}
    meta:
      id: req_61b5ce560ec04dad91320320816e8b7c
      created: 1760907740136
      modified: 1760926062413
      isPrivate: false
      description: ""
      sortKey: -1760907740136
    method: DELETE
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
    pathParameters:
      - name: id
        value: "3"
  - url: "{{ _.base_url }}/emprestimos/:id/renovar"
    name: /emprestimos/{id}/renovar
    meta:
      id: req_8595504afaa2402f8e5a90f571d574df
      created: 1760907740137
      modified: 1760926033468
      isPrivate: false
      description: ""
      sortKey: -1760907740137
    method: PUT
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
    pathParameters:
      - name: id
        value: "1"
  - url: "{{ _.base_url }}/emprestimos/:id/devolver"
    name: /emprestimos/{id}/devolver
    meta:
      id: req_71b672f95e7c4dd7a6ebb027323c86ff
      created: 1760907740139
      modified: 1760926024788
      isPrivate: false
      description: ""
      sortKey: -1760907740139
    method: PUT
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
    pathParameters:
      - name: id
        value: "2"
  - url: "{{ _.base_url }}/autores/:id"
    name: /autores/{id}
    meta:
      id: req_63ace48782754e52a50127675eb5bc4f
      created: 1760907740140
      modified: 1760925885522
      isPrivate: false
      description: ""
      sortKey: -1760907740156.5
    method: GET
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
    pathParameters:
      - name: id
        value: "1"
  - url: "{{ _.base_url }}/autores/:id"
    name: /autores/{id}
    meta:
      id: req_bd3e4670b6604b748301c5da70051598
      created: 1760907740141
      modified: 1760926015548
      isPrivate: false
      description: ""
      sortKey: -1760907740141
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
          "idAut": 0,
          "nomeAut": "string",
          "nacionalidadeAut": "string",
          "dataNascimentoAut": "string"
        }
    headers:
      - name: Content-Type
        disabled: false
        value: application/json
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
    pathParameters:
      - name: id
        value: "1"
  - url: "{{ _.base_url }}/usuarios/registrar"
    name: /usuarios/registrar
    meta:
      id: req_8688482f960d470b8b45ebdc19af0ef6
      created: 1760907740144
      modified: 1760907740144
      isPrivate: false
      description: ""
      sortKey: -1760907740144
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "idUs": 1,
          "emailUs": "string",
          "senhaUs": "string",
          "nomeUs": "string",
          "ativoUs": true,
          "tipoUs": "string",
          "permissao": "string",
          "enabled": true,
          "password": "string",
          "authorities": [
            {
              "authority": "string"
            }
          ],
          "username": "string",
          "accountNonLocked": true,
          "accountNonExpired": true,
          "credentialsNonExpired": true
        }
    headers:
      - name: Content-Type
        disabled: false
        value: application/json
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/login"
    name: /login
    meta:
      id: req_452285ab2eb842a0b75190655d0fc313
      created: 1760907740145
      modified: 1760926003142
      isPrivate: false
      description: ""
      sortKey: -1760907740145
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "login": "admin@email.com",
          "senha": "admin123"
        }
    headers:
      - name: Content-Type
        disabled: false
        value: application/json
    authentication:
      type: none
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/livros/registrar"
    name: /livros/registrar
    meta:
      id: req_96ebb2441fa1410d934b93773644f1d8
      created: 1760907740147
      modified: 1760925983655
      isPrivate: false
      description: ""
      sortKey: -1760907740147
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "idLiv": 0,
          "tituloLiv": "string",
          "isbnLiv": "string",
          "anoPublicacaoLiv": 0,
          "autoresIds": [
            0
          ]
        }
    headers:
      - name: Content-Type
        disabled: false
        value: application/json
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/emprestimos/registrar"
    name: /emprestimos/registrar
    meta:
      id: req_937e805863434d31b9ed9cd8248038b2
      created: 1760907740148
      modified: 1760925974090
      isPrivate: false
      description: ""
      sortKey: -1760907740148
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "livroEmp": 0,
          "usuarioEmp": 0
        }
    headers:
      - name: Content-Type
        disabled: false
        value: application/json
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/autores/registrar"
    name: /autores/registrar
    meta:
      id: req_2468722db70049239a59df42905fcac7
      created: 1760907740150
      modified: 1760925964784
      isPrivate: false
      description: ""
      sortKey: -1760907740150
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "idAut": 0,
          "nomeAut": "string",
          "nacionalidadeAut": "string",
          "dataNascimentoAut": "string"
        }
    headers:
      - name: Content-Type
        disabled: false
        value: application/json
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/usuarios"
    name: /usuarios
    meta:
      id: req_2c9bc592754e4c51af292c553f008607
      created: 1760907740151
      modified: 1760925946132
      isPrivate: false
      description: ""
      sortKey: -1760907740151
    method: GET
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/livros"
    name: /livros
    meta:
      id: req_cc0abf5c764844ec8622842315937564
      created: 1760907740152
      modified: 1760925927748
      isPrivate: false
      description: ""
      sortKey: -1760907740152
    method: GET
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/livros/all"
    name: /livros/all
    meta:
      id: req_aee410e9c91748b29b217ee49ad6bc3c
      created: 1760907740153
      modified: 1760925916307
      isPrivate: false
      description: ""
      sortKey: -1760907740153
    method: GET
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/emprestimos"
    name: /emprestimos
    meta:
      id: req_7b14510d0672434485be87fb5561adce
      created: 1760907740154
      modified: 1760925906894
      isPrivate: false
      description: ""
      sortKey: -1760907740154
    method: GET
    parameters:
      - name: idUsuario
        disabled: false
        value: "0"
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/emprestimos/:id"
    name: /emprestimos/{id}
    meta:
      id: req_1cf3e7b0a4db481bb47dae9829164600
      created: 1760907740156
      modified: 1760925895925
      isPrivate: false
      description: ""
      sortKey: -1760907740156
    method: GET
    parameters:
      - id: pair_8225832271ce47abab7406da555716dd
        name: ""
        value: ""
        description: ""
        disabled: true
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
    pathParameters:
      - name: id
        value: "1"
  - url: "{{ _.base_url }}/autores"
    name: /autores
    meta:
      id: req_2a5415ab541944b0950d7db3057eb742
      created: 1760907740157
      modified: 1760925880276
      isPrivate: false
      description: ""
      sortKey: -1760907740157
    method: GET
    authentication:
      type: bearer
      token: "{{ _.token }}"
      prefix: "Bearer "
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
cookieJar:
  name: Default Jar
  meta:
    id: jar_47c5bd72d4bfdda70a9a5d0d17d5186481973a7b
    created: 1760898025927
    modified: 1760898025927
environments:
  name: Base Environment
  meta:
    id: env_47c5bd72d4bfdda70a9a5d0d17d5186481973a7b
    created: 1760898025923
    modified: 1760913683897
    isPrivate: false
  data:
    base_url: "{{ _.scheme }}://{{ _.host }}{{ _.base_path }}"
  subEnvironments:
    - name: OpenAPI env localhost:8080
      meta:
        id: env_796f565e122c4430a1c359fbaa97a084
        created: 1760907659985
        modified: 1760925167123
        isPrivate: false
        sortKey: 1760907659985
      data:
        scheme: http
        host: localhost:8080
        base_path: /biblioteca3.0
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJBUEkgQmlibGlvdGVjYSAzLjAiLCJzdWIiOiJhZG1pbkBlbWFpbC5jb20iLCJST0xFIjoiUk9MRV9BRE1JTiIsImV4cCI6MTc2MDkyMjYwMX0.k4S6W7PnzoM4U9xRreQD2FicBFcSyfAFlzxDKf8LXD4
spec:
  contents:
    openapi: 3.0.1
    info:
      title: OpenAPI definition
      version: v0
    servers:
      - url: http://localhost:8080/biblioteca3.0
        description: Generated server url
    paths:
      /usuarios/{id}:
        get:
          tags:
            - usuario-controller
          operationId: buscarPorId
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int32
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/DadosUsuario"
        put:
          tags:
            - usuario-controller
          operationId: atualizar
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int32
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Usuario"
            required: true
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/DadosUsuario"
        delete:
          tags:
            - usuario-controller
          operationId: excluir
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int32
          responses:
            "200":
              description: OK
      /livros/{id}:
        get:
          tags:
            - livro-controller
          operationId: getLivroById
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int32
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/Livro"
        put:
          tags:
            - livro-controller
          operationId: atualizar_1
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int32
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/LivroDTO"
            required: true
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/Livro"
        delete:
          tags:
            - livro-controller
          operationId: excluir_1
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int32
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/Livro"
      /emprestimos/{id}/renovar:
        put:
          tags:
            - emprestimo-controller
          operationId: renovar
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int32
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/Emprestimo"
      /emprestimos/{id}/devolver:
        put:
          tags:
            - emprestimo-controller
          operationId: devolver
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int32
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/Emprestimo"
      /autores/{id}:
        get:
          tags:
            - autor-controller
          operationId: buscarPorId_2
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int32
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/Autor"
        put:
          tags:
            - autor-controller
          operationId: atualizar_2
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int32
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Autor"
            required: true
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/Autor"
        delete:
          tags:
            - autor-controller
          operationId: excluir_2
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int32
          responses:
            "200":
              description: OK
      /usuarios/registrar:
        post:
          tags:
            - usuario-controller
          operationId: salvar
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Usuario"
            required: true
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/DadosUsuario"
      /login:
        post:
          tags:
            - autenticacao-controller
          operationId: login
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/DadosAutenticacao"
            required: true
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    type: object
      /livros/registrar:
        post:
          tags:
            - livro-controller
          operationId: salvar_1
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/LivroDTO"
            required: true
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/Livro"
      /emprestimos/registrar:
        post:
          tags:
            - emprestimo-controller
          operationId: salvar_2
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/EmprestimoDTO"
            required: true
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/Emprestimo"
      /autores/registrar:
        post:
          tags:
            - autor-controller
          operationId: salvar_3
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Autor"
            required: true
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/Autor"
      /usuarios:
        get:
          tags:
            - usuario-controller
          operationId: listar
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/DadosUsuario"
      /livros:
        get:
          tags:
            - livro-controller
          operationId: listarAtivos
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/Livro"
      /livros/all:
        get:
          tags:
            - livro-controller
          operationId: listarAll
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/Livro"
      /emprestimos:
        get:
          tags:
            - emprestimo-controller
          operationId: listar_1
          parameters:
            - name: idUsuario
              in: query
              required: true
              schema:
                type: integer
                format: int32
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/Emprestimo"
      /emprestimos/{id}:
        get:
          tags:
            - emprestimo-controller
          operationId: buscarPorId_1
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int32
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/Emprestimo"
      /autores:
        get:
          tags:
            - autor-controller
          operationId: listar_2
          responses:
            "200":
              description: OK
              content:
                "*/*":
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/Autor"
    components:
      schemas:
        GrantedAuthority:
          type: object
          properties:
            authority:
              type: string
        Usuario:
          required:
            - ativoUs
            - nomeUs
            - permissao
            - senhaUs
            - tipoUs
          type: object
          properties:
            idUs:
              type: integer
              description: ID único do usuário
              format: int32
              example: 1
            emailUs:
              type: string
            senhaUs:
              type: string
            nomeUs:
              type: string
            ativoUs:
              type: boolean
            tipoUs:
              type: string
            permissao:
              type: string
            enabled:
              type: boolean
            password:
              type: string
            authorities:
              type: array
              items:
                $ref: "#/components/schemas/GrantedAuthority"
            username:
              type: string
            accountNonLocked:
              type: boolean
            accountNonExpired:
              type: boolean
            credentialsNonExpired:
              type: boolean
        DadosUsuario:
          type: object
          properties:
            id:
              type: integer
              format: int32
            email:
              type: string
            permissao:
              type: string
        LivroDTO:
          required:
            - autoresIds
            - tituloLiv
          type: object
          properties:
            idLiv:
              type: integer
              format: int32
            tituloLiv:
              type: string
            isbnLiv:
              type: string
            anoPublicacaoLiv:
              type: integer
              format: int32
            autoresIds:
              uniqueItems: true
              type: array
              items:
                type: integer
                format: int32
        Autor:
          required:
            - nomeAut
          type: object
          properties:
            idAut:
              type: integer
              format: int32
            nomeAut:
              type: string
            nacionalidadeAut:
              type: string
            dataNascimentoAut:
              type: string
              format: date
        Livro:
          required:
            - tituloLiv
          type: object
          properties:
            idLiv:
              type: integer
              format: int32
            tituloLiv:
              type: string
            isbnLiv:
              type: string
            anoPublicacaoLiv:
              type: integer
              format: int32
            disponivelLiv:
              type: boolean
            ativoLiv:
              type: boolean
            autores:
              uniqueItems: true
              type: array
              items:
                $ref: "#/components/schemas/Autor"
        Emprestimo:
          required:
            - dataDevolucaoPrevistaEmp
            - dataEmprestimoEmp
            - statusEmp
          type: object
          properties:
            idEmp:
              type: integer
              format: int32
            livroEmp:
              $ref: "#/components/schemas/Livro"
            usuarioEmp:
              $ref: "#/components/schemas/Usuario"
            dataEmprestimoEmp:
              type: string
              format: date
            dataDevolucaoPrevistaEmp:
              type: string
              format: date
            dataDevolucaoEfetivaEmp:
              type: string
              format: date
            statusEmp:
              type: string
        DadosAutenticacao:
          type: object
          properties:
            login:
              type: string
            senha:
              type: string
        EmprestimoDTO:
          required:
            - livroEmp
            - usuarioEmp
          type: object
          properties:
            livroEmp:
              type: integer
              format: int32
            usuarioEmp:
              type: integer
              format: int32
  meta:
    id: spc_5a66a3982f72416497ed5eaf5e3a7146
    created: 1760898025919
    modified: 1760898025921
